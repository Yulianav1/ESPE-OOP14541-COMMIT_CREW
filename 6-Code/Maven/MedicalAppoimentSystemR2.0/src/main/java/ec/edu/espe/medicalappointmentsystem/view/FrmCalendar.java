/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.espe.medicalappointmentsystem.view;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import static ec.edu.espe.medicalappointmentsystem.controller.AppointmentController.loadAppointments;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author usuar
 */
public class FrmCalendar extends javax.swing.JFrame {

    private MongoDBConnection mongoDBConnection;
    private MongoDatabase database;

    /**
     * Creates new form FrmAddDoctor
     */
    public FrmCalendar() {
        initComponents();
        mongoDBConnection = new MongoDBConnection();
        database = mongoDBConnection.getDatabase();

    }

    public FrmCalendar(FrmMenu aThis) {
        initComponents();
        mongoDBConnection = new MongoDBConnection();
        database = mongoDBConnection.getDatabase();

    }

    public FrmCalendar(FrmMenu aThis, Object par1) {
        initComponents();
        mongoDBConnection = new MongoDBConnection();
        database = mongoDBConnection.getDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        btnHome10 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbClinic = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmdStatusAppointment = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmdDoctorSelect = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        birthDateChooser = new com.toedter.calendar.JDateChooser();
        btnCarry = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAppointment = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(33, 150, 243));

        jLabel16.setFont(new java.awt.Font("RomanD", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Medical Appointment System");

        btnHome10.setText("Home");
        btnHome10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHome10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnHome10)
                .addGap(65, 65, 65)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHome10)
                    .addComponent(jLabel16))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("RomanD", 1, 18)); // NOI18N
        jLabel17.setText("Calendario");

        jLabel2.setText("Establecimiento:");

        cmbClinic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clinica 1", "Clinica 2" }));
        cmbClinic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClinicActionPerformed(evt);
            }
        });

        jLabel3.setText("Estado:");

        cmdStatusAppointment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Sin reservas", "Reservadas" }));
        cmdStatusAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStatusAppointmentActionPerformed(evt);
            }
        });

        jLabel4.setText("Personal:");

        cmdDoctorSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor1", "Doctor 2" }));
        cmdDoctorSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDoctorSelectActionPerformed(evt);
            }
        });

        jLabel5.setText("Fecha:");

        btnCarry.setText("Cargar");
        btnCarry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbClinic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(birthDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdDoctorSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdStatusAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCarry)
                        .addGap(59, 59, 59))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbClinic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmdStatusAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmdDoctorSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(birthDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnCarry)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTableAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Horario", "Nombre", "Cedula", "Telefono"
            }
        ));
        jScrollPane1.setViewportView(jTableAppointment);
        jTableAppointment.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(245, 245, 245))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbClinicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClinicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClinicActionPerformed

    private void cmdStatusAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStatusAppointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdStatusAppointmentActionPerformed

    private void btnCarryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarryActionPerformed
        loadAppointments();
    }//GEN-LAST:event_btnCarryActionPerformed

    private void btnHome10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHome10ActionPerformed
        FrmMenu frmMenu = new FrmMenu();
        this.setVisible(false);
        frmMenu.setVisible(true);
    }//GEN-LAST:event_btnHome10ActionPerformed

    private void cmdDoctorSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDoctorSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdDoctorSelectActionPerformed
    private void loadAppointments() {
        MongoCollection<Document> collection = database.getCollection("Appointment");

        // Obtener la fecha seleccionada
        String selectedDate = birthDateChooser.getDate().toString();  // Asegúrate de que datePicker es el componente correcto

        List<Appointment> appointments = new ArrayList<>();
        for (Document doc : collection.find(new Document("fecha", selectedDate))) {
            String horario = doc.getString("horario");
            String nombre = doc.getString("nombre");
            String cedula = doc.getString("cedula");
            String telefono = doc.getString("telefono");
            appointments.add(new Appointment(horario, nombre, cedula, telefono));
        }

        // Limpiar la tabla antes de cargar los nuevos datos
        DefaultTableModel model = (DefaultTableModel) jTableAppointment.getModel();  // Reemplaza 'yourTable' con el nombre de tu JTable
        model.setRowCount(0);

        // Agregar las citas a la tabla
        for (Appointment appointment : appointments) {
            model.addRow(new Object[]{appointment.getHorario(), appointment.getNombre(), appointment.getCedula(), appointment.getTelefono()});
        }
    }
    

    /**
     * @param args
     */
    public static void main(String args[]) {
        SwingUtilities.invokeLater(() -> {
            FrmCalendar frame = new FrmCalendar();
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setVisible(true);
        });
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCalendar().setVisible(true);
            }
        });
    }
// Inicializar los componentes (debes definir estos componentes)
    // Clase para la conexión con MongoDB

    public class MongoDBConnection {

        private static final String CONNECTION_STRING = "mongodb+srv://valencia:valencia@cluster0.wmq4g6d.mongodb.net/";
        private static final String DATABASE_NAME = "Medical_Appointment";

        private MongoClient mongoClient;
        private MongoDatabase database;

        public MongoDBConnection() {
            mongoClient = MongoClients.create(CONNECTION_STRING);
            database = mongoClient.getDatabase(DATABASE_NAME);
        }

        public MongoDatabase getDatabase() {
            return database;
        }

        public void close() {
            if (mongoClient != null) {
                mongoClient.close();
            }
        }
    }

   

    // Clase para representar una cita
    public class Appointment {

        private String horario;
        private String nombre;
        private String cedula;
        private String telefono;

        public Appointment(String horario, String nombre, String cedula, String telefono) {
            this.horario = horario;
            this.nombre = nombre;
            this.cedula = cedula;
            this.telefono = telefono;
        }

        public String getHorario() {
            return horario;
        }

        public String getNombre() {
            return nombre;
        }

        public String getCedula() {
            return cedula;
        }

        public String getTelefono() {
            return telefono;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser birthDateChooser;
    private javax.swing.JButton btnCarry;
    private javax.swing.JButton btnHome10;
    private javax.swing.JComboBox<String> cmbClinic;
    private javax.swing.JComboBox<String> cmdDoctorSelect;
    private javax.swing.JComboBox<String> cmdStatusAppointment;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAppointment;
    // End of variables declaration//GEN-END:variables
}
